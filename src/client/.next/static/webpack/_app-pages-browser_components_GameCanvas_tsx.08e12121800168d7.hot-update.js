"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_app-pages-browser_components_GameCanvas_tsx",{

/***/ "(app-pages-browser)/./components/GameCanvas.tsx":
/*!***********************************!*\
  !*** ./components/GameCanvas.tsx ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ GameCanvas; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/../../node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/../../node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_track__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/track */ \"(app-pages-browser)/./lib/track.ts\");\n/* harmony import */ var _lib_net__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/net */ \"(app-pages-browser)/./lib/net.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\nfunction GameCanvas(param) {\n    let { width, height } = param;\n    _s();\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [connected, setConnected] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [seed, setSeed] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [tick, setTick] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [players, setPlayers] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [localRunId, setLocalRunId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const cleanup = (0,_lib_net__WEBPACK_IMPORTED_MODULE_3__.connect)({\n            onOpen: ()=>setConnected(true),\n            onClose: ()=>setConnected(false),\n            onJoinAck: (payload)=>setSeed(payload.seed),\n            onSnapshot: (payload)=>{\n                setSeed(payload.seed);\n                setTick(payload.tick);\n                setPlayers(payload.players);\n            },\n            onRunStart: (payload)=>{\n                setLocalRunId(payload.run_id);\n            },\n            onRunEnd: ()=>{\n                // Reset local run so camera snaps back to start and doesn't follow others\n                setLocalRunId(null);\n            }\n        });\n        const onKey = (e)=>{\n            if (e.code === \"Space\") {\n                e.preventDefault();\n                window.dispatchEvent(new CustomEvent(\"flap\"));\n            }\n        };\n        window.addEventListener(\"keydown\", onKey);\n        const onTap = ()=>window.dispatchEvent(new CustomEvent(\"flap\"));\n        window.addEventListener(\"click\", onTap);\n        return ()=>{\n            window.removeEventListener(\"keydown\", onKey);\n            window.removeEventListener(\"click\", onTap);\n            cleanup === null || cleanup === void 0 ? void 0 : cleanup();\n        };\n    }, []);\n    // Derive the local player entity for the active run if known (by run_id)\n    const localPlayer = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        if (!localRunId) return undefined;\n        return players.find((p)=>p.run_id === localRunId);\n    }, [\n        players,\n        localRunId\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        let raf = 0;\n        const canvas = canvasRef.current;\n        if (!canvas) return;\n        const dpr = Math.max(1, Math.floor(window.devicePixelRatio || 1));\n        // Resize backing store for crisp rendering\n        canvas.width = Math.floor(width * dpr);\n        canvas.height = Math.floor(height * dpr);\n        canvas.style.width = \"\".concat(width, \"px\");\n        canvas.style.height = \"\".concat(height, \"px\");\n        const ctx = canvas.getContext(\"2d\");\n        if (!ctx) return;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        const render = ()=>{\n            ctx.clearRect(0, 0, width, height);\n            // Background\n            ctx.fillStyle = \"#0e1520\";\n            ctx.fillRect(0, 0, width, height);\n            // World scaling to match server-side WORLD_HEIGHT\n            const WORLD_H = 600;\n            const sY = height / WORLD_H;\n            // Camera: anchor only to local player's distance; otherwise stay at origin (don't follow others)\n            const LEAD_IN = 160; // pixels of space ahead of player on the left side\n            const camX = localPlayer ? localPlayer.distance : 0;\n            // Determine how many pipes to render so they fill the screen width\n            const spacingPx = (0,_lib_track__WEBPACK_IMPORTED_MODULE_2__.getPipeSpacingPx)();\n            const countAfter = Math.ceil((width + LEAD_IN) / spacingPx) + 2;\n            const countBefore = 3; // a bit more history so pipes don't drop too early\n            if (seed) {\n                const pipes = (0,_lib_track__WEBPACK_IMPORTED_MODULE_2__.getPipesAtTick)(seed, tick, {\n                    worldHeight: WORLD_H,\n                    countBefore,\n                    countAfter,\n                    baseDistance: camX\n                });\n                for (const p of pipes){\n                    const screenX = Math.round(LEAD_IN + (p.x - camX));\n                    // Cull if completely off screen (non-strict to avoid early pop)\n                    if (screenX + p.width <= 0 || screenX >= width) continue;\n                    const topH = (p.gapCenterY - p.gapHeight / 2) * sY;\n                    const botY = (p.gapCenterY + p.gapHeight / 2) * sY;\n                    ctx.fillStyle = \"#22c55e\";\n                    ctx.fillRect(screenX, 0, p.width, topH);\n                    ctx.fillRect(screenX, botY, p.width, height - botY);\n                }\n            }\n            // Draw players relative to camera\n            ctx.textAlign = \"center\";\n            ctx.textBaseline = \"bottom\";\n            const labelPx = Math.max(10, Math.round(12 * (height / 600)));\n            ctx.font = \"\".concat(labelPx, \"px system-ui\");\n            for (const pl of players){\n                const x = Math.round(LEAD_IN + (pl.distance - camX));\n                const y = pl.position.y * (height / 600);\n                // Avatar\n                const isLocal = localPlayer && pl.run_id === localPlayer.run_id;\n                ctx.fillStyle = isLocal ? \"#fbbf24\" : \"#60a5fa\";\n                const aw = Math.max(16, Math.round(24 * (height / 600)));\n                const ah = Math.max(12, Math.round(18 * (height / 600)));\n                ctx.fillRect(x, y, aw, ah);\n                // Label above avatar\n                const label = (pl.player_id || \"?\").slice(0, 6);\n                ctx.fillStyle = \"#e5e7eb\";\n                ctx.fillText(label, x + Math.round(aw / 2), y - 4);\n            }\n            // If we don't yet have a local player from snapshots, render a placeholder\n            if (!localPlayer) {\n                const aw = Math.max(16, Math.round(24 * (height / 600)));\n                const ah = Math.max(12, Math.round(18 * (height / 600)));\n                const x = Math.round(LEAD_IN);\n                const y = Math.round(WORLD_H * 0.4 * sY);\n                ctx.fillStyle = \"#fbbf24\"; // highlight color for local placeholder\n                ctx.fillRect(x, y, aw, ah);\n                ctx.fillStyle = \"#e5e7eb\";\n                ctx.fillText(\"You\", x + Math.round(aw / 2), y - 4);\n            }\n            // HUD (render last to ensure it's on top)\n            const status = connected ? \"Connected\" : \"Connecting...\";\n            const hudLines = [\n                status\n            ];\n            const me = localPlayer;\n            if (me) {\n                const dist = Math.max(0, Math.floor(me.distance));\n                var _me_score;\n                const score = (_me_score = me.score) !== null && _me_score !== void 0 ? _me_score : 0;\n                hudLines.push(\"Score: \".concat(score));\n                hudLines.push(\"Dist: \".concat(dist, \"px\"));\n            }\n            const lineH = 18;\n            const pad = 8;\n            const hudW = 160;\n            const hudH = hudLines.length * lineH + pad * 2 - 4;\n            // backdrop for readability\n            ctx.fillStyle = \"rgba(2,6,23,0.6)\";\n            ctx.fillRect(8, 8, hudW, hudH);\n            ctx.fillStyle = \"#cbd5e1\";\n            ctx.font = \"14px system-ui\";\n            ctx.textBaseline = \"top\";\n            ctx.textAlign = \"left\";\n            let yOff = 8 + pad - 2;\n            for (const line of hudLines){\n                ctx.fillText(line, 12, yOff);\n                yOff += lineH;\n            }\n            raf = requestAnimationFrame(render);\n        };\n        raf = requestAnimationFrame(render);\n        return ()=>cancelAnimationFrame(raf);\n    }, [\n        width,\n        height,\n        seed,\n        tick,\n        players,\n        connected,\n        localRunId\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n        ref: canvasRef,\n        width: width,\n        height: height\n    }, void 0, false, {\n        fileName: \"/Users/richardalvarez/Dev/flappy-multiplayer/src/client/components/GameCanvas.tsx\",\n        lineNumber: 167,\n        columnNumber: 10\n    }, this);\n}\n_s(GameCanvas, \"Y8NLWKkLGYpCYHqDnL7BnUxkRo0=\");\n_c = GameCanvas;\nvar _c;\n$RefreshReg$(_c, \"GameCanvas\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/GameCanvas.tsx\n"));

/***/ })

});